
@namespace("org.ga4gh.methods")
/**
This protocol defines genotype to phenotype relationships
query system.

The goal here is to allow users to query systems using one
or more of Genotype, Phenotype, Environment, and Evidence.

A query using one of the above items is to mean, by default,
that the remainder of the query is as a "wildcard", such
that all matches to just that query term would come back.
Combinations of the above are to act like AND rather than OR.

The Genotype part of the query methods can be one or more
genomic features.  Associations can be made at many
levels of granularity (from whole genotypes down to individual
SNVs), but users may use these methods with partial or
inexact information.  Therefore, the query methods must be
able to support query of some or all of the associated features.
Furthermore, use of the relationships between genomic features
means that when querying for a gene, any varants to that
gene are also returned.  For example, a query with
BRCA2 would mean that in addition to any direct associations
to the BRCA2, all associations to sequence variants of BRCA2 would also
be returned.

*/
protocol GenotypePhenotypeMethods {


import idl "genotypephenotype.avdl";
import idl "methods.avdl";

/******************  /genotypephenotype/search  *********************/



/**
Evidence for the phenotype association.
*/
record EvidenceQuery {
  /** ECO or OBI is recommended */
  org.ga4gh.models.OntologyTerm evidenceType;
}


/**
The feature collection to search for.  One or more features (variants,
genes, etc) can be specified.  The idea here is that if a
query is for a gene, then any alleles to that gene for which
there are annotation records would be returned.
*/
record FeatureQuery {
  array<org.ga4gh.models.Feature> features;
}


/**
One or more phenotypes can be queried together.
*/
record PhenotypeQuery {
  array<org.ga4gh.models.PhenotypeInstance> phenotypes;
}

/** This request maps to the body of `POST /genotypephenotype/search` as JSON. */
record SearchFeaturesRequest {

  union { null, FeatureQuery } feature = null;

  union { null, PhenotypeQuery } phenotype = null;

  union { null, EvidenceQuery } evidence = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}


/** This is the response from `POST /genotypephenotype/search` expressed as JSON. */
record SearchFeaturesResponse {
  /**
  The list of matching Association.
  */
  array<org.ga4gh.models.Association> associations = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Variant` matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`
as the post body and will return a JSON version of `SearchVariantsResponse`.
*/
SearchFeaturesResponse searchVariants(
  /** This request maps to the body of `POST /variants/search` as JSON. */
  SearchFeaturesRequest request) throws org.ga4gh.methods.GAException;

}
